version: '3.9'

services:
  postgres-primary:
    image: postgres:17-alpine
    container_name: pg_primary
    restart: always
    environment:
      POSTGRES_USER: drag_and_drop_api_service_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: drag_and_drop_api_service
    volumes:
      - ~/.docker/data/postgresql/17/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    command: >
      postgres -c shared_buffers=2GB
               -c work_mem=64MB
               -c max_connections=300
               -c wal_level=replica
               -c max_wal_senders=10
               -c synchronous_commit=off
               -c log_min_duration_statement=1000

  postgres-replica:
    image: postgres:17-alpine
    container_name: pg_replica
    restart: always
    environment:
      POSTGRES_USER: drag_and_drop_api_service_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: drag_and_drop_api_service
    depends_on:
      - postgres-primary
    volumes:
      - ~/.docker/data/postgresql-replica/17/data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    command: >
      postgres -c hot_standby=on
               -c shared_buffers=2GB
               -c work_mem=64MB
               -c max_connections=300

  pgbouncer:
    image: edoburu/pgbouncer:latest
    container_name: pgbouncer
    restart: always
    depends_on:
      - postgres-primary
      - postgres-replica
    ports:
      - "6432:6432"
    environment:
      DB_USER: drag_and_drop_api_service_user
      DB_PASSWORD: password
    volumes:
      - ~/.docker/data/pgbouncer:/etc/pgbouncer

#  drag-and-drop-api-service:
#    build: ./
#    restart: always
#    depends_on:
#      - pgbouncer
#    ports:
#      - "8080:8080"
#    environment:
#      DATA_SOURCE_URL: jdbc:postgresql://pgbouncer:6432/drag_and_drop_api_service
#    deploy:
#      resources:
#        limits:
#          cpus: '2.0'
#          memory: 2048M
